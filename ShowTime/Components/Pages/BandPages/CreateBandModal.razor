<Modal @bind-Visible="@modalVisible">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Create Band</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <EditForm Model="_bandToCreate" OnValidSubmit="HandleCreate">
                <DataAnnotationsValidator />
                <Field>
                    <Label>
                        <Strong>Band Name</Strong>
                    </Label>
                    <br />
                    <InputText @bind-value=_bandToCreate.Name Placeholder="Type band name" />
                    <ValidationMessage For="@(() => _bandToCreate.Name)" />
                </Field>
                <Field>
                    <Label>
                        <Strong>Genre</Strong>
                    </Label>
                    <br />
                    <Select TValue="Genre" @bind-SelectedValue="_bandToCreate.Genre">
                        @foreach (Genre genre in Enum.GetValues<Genre>())
                        {
                            <SelectItem Value="@genre">@genre.ToString()</SelectItem>
                        }
                    </Select>
                </Field>

                <ModalFooter>
                    <Button Color="Color.Secondary" Clicked="@HideModal">Cancel</Button>
                    <Button Color="Color.Primary" Type="ButtonType.Submit">Create</Button>
                </ModalFooter>
            </EditForm>
        </ModalBody>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public EventCallback OnCreated { get; set; }

    [Inject]
    public required IBandRepository BandRepository { get; set; }

    private bool modalVisible;
    private Band _bandToCreate = new Band();

    public void ShowModal()
    {
        _bandToCreate = new Band();
        modalVisible = true;
    }

    private void HideModal()
    {
        modalVisible = false;
    }

    private async Task HandleCreate()
    {
        if (_bandToCreate != null)
        {
            await BandRepository.AddAsync(_bandToCreate);
            await BandRepository.SaveChangesAsync();
            await OnCreated.InvokeAsync();
        }
        HideModal();
    }
}
